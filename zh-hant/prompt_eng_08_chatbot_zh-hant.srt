1
00:00:05,000 --> 00:00:08,600
關於大語言模型的一個令人興奮的事情，是你可以用它來

2
00:00:08,600 --> 00:00:12,680
構建一個自定義的聊天機器人，只需花費少量的精力

3
00:00:12,680 --> 00:00:17,660
ChatGPT的Web界面能讓你通過一個大語言模型

4
00:00:17,660 --> 00:00:20,500
進行對話

5
00:00:20,500 --> 00:00:23,120
但其中一個很酷的事情是你也可以使用

6
00:00:23,120 --> 00:00:25,680
一個大語言模型來建立你的自定義聊天機器人

7
00:00:25,680 --> 00:00:28,920
也許可以扮演一個AI客戶服務代理或

8
00:00:28,920 --> 00:00:31,480
餐館的AI接單員

9
00:00:31,480 --> 00:00:34,400
在這段視頻中，你將學習如何做這件事

10
00:00:34,400 --> 00:00:37,080
我將描述以下內容

11
00:00:37,080 --> 00:00:39,960
我將更詳細地描述OpenAI的聊天補全格式

12
00:00:39,960 --> 00:00:42,540
然後你將自己建立一個聊天機器人

13
00:00:42,540 --> 00:00:44,400
所以讓我們開始吧

14
00:00:44,400 --> 00:00:49,000
首先，我們將像往常一樣設置OpenAI Python包

15
00:00:49,000 --> 00:00:53,380
因此，像ChatGPT這樣的聊天模型實際上是被訓練成以一系列的信息作為輸入

16
00:00:53,380 --> 00:00:57,640
並返回模型生成的信息作為輸出

17
00:00:57,640 --> 00:00:59,960
因此，儘管聊天格式的設計是為了

18
00:00:59,960 --> 00:01:02,320
使得像這樣的多輪對話變得容易

19
00:01:02,320 --> 00:01:06,000
我們在之前的視頻中已經看到

20
00:01:06,000 --> 00:01:09,560
它也適用於沒有對話的單個任務

21
00:01:09,560 --> 00:01:14,200
所以接下來，我們要定義兩個輔助函數

22
00:01:14,200 --> 00:01:17,080
就是我們在所有視頻中一直在使用的一個

23
00:01:17,080 --> 00:01:20,360
get_completion函數

24
00:01:20,360 --> 00:01:22,080
但是，如果你看一下它

25
00:01:22,080 --> 00:01:25,040
我們給出了一個提示，但是在這個函數里面

26
00:01:25,040 --> 00:01:29,320
我們實際上在做的是把這個提示放到一個

27
00:01:29,320 --> 00:01:32,160
看起來像某種用戶信息

28
00:01:32,160 --> 00:01:37,200
這是因為ChatGPT模型是一個聊天模型

29
00:01:37,200 --> 00:01:40,200
這意味著它被訓練成以一系列信息作為輸入

30
00:01:40,200 --> 00:01:44,000
然後返回模型生成的信息輸出

31
00:01:44,000 --> 00:01:45,880
所以用戶信息是一種輸入

32
00:01:45,880 --> 00:01:49,320
然後助理的信息是輸出

33
00:01:49,320 --> 00:01:51,320
所以在這個視頻中

34
00:01:51,320 --> 00:01:53,760
我們將使用一個不同的輔助函數

35
00:01:53,760 --> 00:01:55,640
而不是把

36
00:01:55,640 --> 00:01:58,400
單一提示作為輸入並獲得單一結果

37
00:01:58,400 --> 00:02:01,680
我們將傳入一個信息列表

38
00:02:01,680 --> 00:02:05,400
這些信息可以來自各種不同的角色

39
00:02:05,400 --> 00:02:07,160
所以我將描述這些

40
00:02:07,160 --> 00:02:10,040
這裡有一個消息列表的例子

41
00:02:10,040 --> 00:02:12,040
第一條信息是

42
00:02:12,040 --> 00:02:15,200
一個系統消息，它給出了一個總體指令

43
00:02:15,200 --> 00:02:16,360
然後在這個消息之後

44
00:02:16,360 --> 00:02:20,040
我們在用戶和助理之間有幾輪對話

45
00:02:20,040 --> 00:02:21,920
而且這種對話通常會繼續下去

46
00:02:21,920 --> 00:02:24,800
如果你曾經使用過ChatGPT的Web界面

47
00:02:24,800 --> 00:02:27,680
那麼你輸入的信息就是用戶信息

48
00:02:27,680 --> 00:02:30,880
然後ChatGPT的信息是助理的信息

49
00:02:30,880 --> 00:02:33,440
因此，系統信息有助於在某種程度上

50
00:02:33,440 --> 00:02:35,800
設定助理的行為和角色

51
00:02:35,800 --> 00:02:38,920
它就像對話的高級指令一樣

52
00:02:38,920 --> 00:02:40,640
所以你可以把它看成是

53
00:02:40,640 --> 00:02:42,440
在助理的耳邊說的話，並引導

54
00:02:42,440 --> 00:02:46,320
它的反應，而用戶並不知道系統的信息

55
00:02:46,320 --> 00:02:47,960
因此，作為用戶

56
00:02:47,960 --> 00:02:49,400
如果你曾經使用過ChatGPT

57
00:02:49,400 --> 00:02:52,640
你可能不知道ChatGPT的系統消息裡有什麼

58
00:02:52,640 --> 00:02:55,360
系統消息的好處是

59
00:02:55,360 --> 00:02:57,240
它為開發者提供了一種方法來框定會話

60
00:02:57,240 --> 00:02:59,120
而不是讓請求本身

61
00:02:59,120 --> 00:03:01,320
成為對話的一部分

62
00:03:01,320 --> 00:03:04,880
這樣，你就可以在不讓用戶察覺的情況下引導助理

63
00:03:04,880 --> 00:03:09,640
並指導其回复

64
00:03:10,280 --> 00:03:15,440
所以現在讓我們試著在對話中使用這些信息

65
00:03:16,080 --> 00:03:19,160
所以我們將使用我們的新助理函數

66
00:03:19,160 --> 00:03:21,720
來補全消息內容

67
00:03:22,600 --> 00:03:27,200
而且我們也在使用更高的temperature

68
00:03:27,200 --> 00:03:29,400
所以系統消息說

69
00:03:29,400 --> 00:03:31,440
你是一個說話像莎士比亞的助理

70
00:03:31,440 --> 00:03:33,160
所以這是我們在向助理描述

71
00:03:33,160 --> 00:03:35,960
向助理描述它應該如何表現

72
00:03:35,960 --> 00:03:38,680
然後第一個用戶信息是，告訴我一個笑話

73
00:03:38,680 --> 00:03:41,640
接下來是，雞為什麼要過馬路？

74
00:03:41,640 --> 00:03:45,520
然後最後的用戶信息是，我不知道

75
00:03:45,520 --> 00:03:49,880
所以，如果我們運行這個

76
00:03:50,600 --> 00:03:55,400
響應是"去到另一邊"。讓我們再試一次

77
00:03:55,720 --> 00:03:57,920
"要到另一邊去"

78
00:03:57,920 --> 00:03:59,240
公平的先生或女士

79
00:03:59,240 --> 00:04:02,040
這是一個古老而經典的方法，永遠不會失敗

80
00:04:02,040 --> 00:04:05,120
所以這就是我們的莎士比亞式響應

81
00:04:05,640 --> 00:04:08,960
讓我們再試一次

82
00:04:08,960 --> 00:04:11,520
因為我想讓它更清楚，這是助理的信息

83
00:04:11,520 --> 00:04:19,360
所以在這裡，讓我們去打印整個消息的回應

84
00:04:32,880 --> 00:04:36,240
所以只是為了讓這個更清楚

85
00:04:36,240 --> 00:04:41,160
這個響應是一個助理信息

86
00:04:41,160 --> 00:04:45,680
所以角色是助理，然後內容是消息本身

87
00:04:45,680 --> 00:04:48,000
所以這就是在這個輔助函數中發生的事情

88
00:04:48,000 --> 00:04:51,880
我們只是傳出了消息的內容

89
00:05:04,960 --> 00:05:07,960
所以現在讓我們再做一個例子

90
00:05:07,960 --> 00:05:09,840
這裡我們的消息是

91
00:05:09,840 --> 00:05:13,160
系統信息是你是一個友好的聊天機器人

92
00:05:13,160 --> 00:05:14,560
而第一個用戶信息是

93
00:05:14,560 --> 00:05:16,120
嗨，我的名字是Isa

94
00:05:16,120 --> 00:05:20,640
我們想獲得第一個用戶的信息

95
00:05:20,640 --> 00:05:22,080
所以讓我們執行這個

96
00:05:22,080 --> 00:05:24,640
第一條助理信息

97
00:05:24,640 --> 00:05:26,880
因此，第一條信息是

98
00:05:26,880 --> 00:05:28,400
你好，Isa，很高興見到你

99
00:05:28,400 --> 00:05:30,760
我今天有什麼可以幫助你的嗎？

100
00:05:36,000 --> 00:05:38,760
現在讓我們試試另一個例子

101
00:05:39,320 --> 00:05:43,720
所以這裡我們的信息是系統信息

102
00:05:43,720 --> 00:05:45,120
你是一個友好的聊天機器人

103
00:05:45,120 --> 00:05:47,080
和第一個用戶信息是

104
00:05:47,080 --> 00:05:53,880
是的，你能提醒我我的名字是什麼嗎？

105
00:05:53,880 --> 00:05:56,400
讓我們得到回應

106
00:05:56,400 --> 00:06:01,440
正如你所看到的

107
00:06:01,440 --> 00:06:05,800
該模型實際上並不知道我的名字

108
00:06:05,800 --> 00:06:10,680
因此，與語言模型的每一次對話都是一個獨立的互動

109
00:06:10,680 --> 00:06:13,200
這意味著，你必須提供所有相關的信息

110
00:06:13,200 --> 00:06:16,120
供模型在當前對話中使用

111
00:06:16,120 --> 00:06:18,560
如果你想讓模型從或中汲取

112
00:06:18,560 --> 00:06:21,240
引述，記住一個對話的早期部分

113
00:06:21,240 --> 00:06:24,640
你必須在模型的輸入中提供早期的對話交互內容

114
00:06:24,640 --> 00:06:26,960
我們也把這稱為上下文

115
00:06:26,960 --> 00:06:30,240
所以，讓我們來試試這個

116
00:06:34,440 --> 00:06:39,000
所以現在我們已經給出了模型需要的上下文

117
00:06:39,000 --> 00:06:41,600
這是我在以前的信息中的名字

118
00:06:41,600 --> 00:06:43,160
我們將問同樣的問題

119
00:06:43,160 --> 00:06:45,640
所以我們會問我的名字是什麼

120
00:06:45,960 --> 00:06:50,320
模型能夠作出反應，因為它有所有的上下文

121
00:06:50,320 --> 00:06:55,520
在我們輸入的消息列表中需要它

122
00:06:55,520 --> 00:06:58,760
所以現在你要建立你自己的聊天機器人

123
00:06:58,760 --> 00:07:02,040
這個聊天機器人將被稱為orderbot（點餐機器人）

124
00:07:02,040 --> 00:07:05,520
我們將自動收集

125
00:07:05,520 --> 00:07:09,480
我們將自動收集用戶的提示和助理的回應，以建立這個訂單機器人

126
00:07:09,480 --> 00:07:12,200
它將在一家披薩店接受訂單

127
00:07:12,200 --> 00:07:16,040
所以首先，我們要定義這個助理函數

128
00:07:16,040 --> 00:07:19,040
這個函數要做的是收集

129
00:07:19,040 --> 00:07:24,840
我們的用戶信息，這樣我們就可以避免像上面那樣用手輸入信息了

130
00:07:24,840 --> 00:07:29,760
這將從我們下面建立的用戶界面上收集提示信息

131
00:07:29,760 --> 00:07:32,800
然後將其追加到一個叫做"上下文"的列表中

132
00:07:32,800 --> 00:07:36,280
然後它每次都會用這個上下文調用模型

133
00:07:36,280 --> 00:07:39,320
然後模型的響應也會被添加到上下文中

134
00:07:39,320 --> 00:07:43,560
所以模型的信息被添加到上下文中

135
00:07:43,560 --> 00:07:45,160
用戶信息被添加到上下文中

136
00:07:45,160 --> 00:07:47,880
以此類推，它只會越來越長

137
00:07:47,880 --> 00:07:52,680
這樣一來，模型就有了它所需要的信息來決定下一步該做什麼

138
00:07:52,680 --> 00:07:58,600
現在我們將設置並運行這個用戶界面來顯示訂單機器人

139
00:07:58,600 --> 00:08:00,360
所以這裡是上下文

140
00:08:00,360 --> 00:08:04,200
並且它包含了包含菜單的系統信息

141
00:08:04,560 --> 00:08:08,160
請注意，每次我們調用語言模型的時候

142
00:08:08,160 --> 00:08:13,400
我們都會使用相同的上下文，而且這個上下文是隨著時間的推移而建立的

143
00:08:13,400 --> 00:08:19,040
然後讓我們來執行這個

144
00:08:22,880 --> 00:08:25,760
我要說，你好

145
00:08:25,760 --> 00:08:29,440
我想訂購一個比薩餅

146
00:08:33,080 --> 00:08:35,400
助理說，太好了

147
00:08:35,400 --> 00:08:36,880
你想點什麼比薩餅？

148
00:08:36,880 --> 00:08:40,520
我們有意大利香腸、奶酪和茄子比薩

149
00:08:40,520 --> 00:08:44,680
多少錢？

150
00:08:53,080 --> 00:08:56,880
很好。好的，我們得到了價格

151
00:08:56,880 --> 00:09:12,000
我想我覺得是中號茄子比薩。所以你可以想像

152
00:09:12,000 --> 00:09:14,000
我們可以繼續這個對話

153
00:09:14,000 --> 00:09:17,720
讓我們看看我們在系統信息中放了什麼

154
00:09:18,280 --> 00:09:20,400
所以你是orderbot

155
00:09:20,400 --> 00:09:23,280
為一家比薩店收集訂單的自動化服務

156
00:09:23,280 --> 00:09:24,600
你首先要問候顧客

157
00:09:24,600 --> 00:09:27,800
然後收集訂單，再問是自取還是配送

158
00:09:27,800 --> 00:09:29,480
你等待收集整個訂單

159
00:09:29,480 --> 00:09:31,680
然後總結一下，最後進行檢查

160
00:09:31,680 --> 00:09:33,800
如果顧客還想添加其他東西

161
00:09:33,800 --> 00:09:36,400
如果是送貨，你可以要求提供地址

162
00:09:36,400 --> 00:09:38,040
最後，你拿到付款

163
00:09:38,040 --> 00:09:40,240
確保清晰描述所有選項、附加服務、額外費用

164
00:09:40,240 --> 00:09:43,120
和尺寸，以便從菜單上精確識別該項目

165
00:09:43,120 --> 00:09:44,920
你需要以簡短的

166
00:09:44,920 --> 00:09:46,840
健談的、友好的風格來回答

167
00:09:46,840 --> 00:09:50,880
菜單包括，然後在這裡我們有菜單

168
00:09:51,120 --> 00:09:54,200
所以讓我們回到我們的對話

169
00:09:54,200 --> 00:09:58,720
讓我們看看助理是否一直在遵循指示

170
00:09:58,720 --> 00:10:01,720
好的，很好。助理問我們是否需要任何配料

171
00:10:01,720 --> 00:10:05,760
我們在系統信息中指定了這一點

172
00:10:05,760 --> 00:10:09,600
所以我想我們不需要額外的配料

173
00:10:15,600 --> 00:10:18,680
當然可以。還有什麼我們想點的嗎？

174
00:10:18,680 --> 00:10:22,240
嗯。讓我們來點水

175
00:10:22,240 --> 00:10:26,240
事實上，薯條

176
00:10:32,240 --> 00:10:34,240
小的還是大的？

177
00:10:34,240 --> 00:10:36,240
這很好，因為我們在系統信息中

178
00:10:36,240 --> 00:10:41,240
要求助理在系統信息中說明額外的東西和配菜

179
00:10:46,240 --> 00:10:50,240
這樣你就明白了，你可以隨意試玩一下這個過程

180
00:10:50,240 --> 00:10:55,240
可以暫停視頻，在左邊的Notebook上運行這個

181
00:10:55,240 --> 00:10:59,240
現在我們可以要求該模型創建一個JSON摘要

182
00:10:59,240 --> 00:11:03,240
我們可以在對話的基礎上發送至訂單系統

183
00:11:03,240 --> 00:11:06,240
所以，我們現在要附加另一個系統消息

184
00:11:06,240 --> 00:11:08,240
這是一個指令

185
00:11:08,240 --> 00:11:11,240
我們在說創建一個關於之前食品訂單的JSON摘要

186
00:11:11,240 --> 00:11:13,240
逐項列出每一項的價格

187
00:11:13,240 --> 00:11:18,240
字段應該是一個比薩餅，包括配菜

188
00:11:18,240 --> 00:11:21,240
兩張配料表，三張飲料表

189
00:11:21,240 --> 00:11:23,240
和四份配菜清單

190
00:11:23,240 --> 00:11:25,240
最後是總價格

191
00:11:25,240 --> 00:11:29,240
你也可以在這裡使用一個用戶信息

192
00:11:29,240 --> 00:11:33,240
這不一定是一個系統消息

193
00:11:33,240 --> 00:11:36,240
所以讓我們來執行這個

194
00:11:36,240 --> 00:11:39,240
注意在這種情況下，我們需要使用更低的temperature

195
00:11:39,240 --> 00:11:41,240
因為對於這些類型的任務

196
00:11:41,240 --> 00:11:43,240
我們希望輸出是相當可預測的

197
00:11:43,240 --> 00:11:47,240
對於一個對話式的代理，你可能想使用更高的temperature

198
00:11:47,240 --> 00:11:50,240
然而，在這種情況下，我可能也會使用一個較低的temperature

199
00:11:50,240 --> 00:11:53,240
因為對於一個客戶助理聊天機器人來說

200
00:11:53,240 --> 00:11:59,240
你可能想讓輸出更可預測一些

201
00:11:59,240 --> 00:12:02,240
因此，在這裡我們有我們的訂單摘要

202
00:12:02,240 --> 00:12:07,240
如果我們想的話，我們可以把這個提交給訂單系統

203
00:12:07,240 --> 00:12:08,240
這就是我們需要的

204
00:12:08,240 --> 00:12:11,240
你已經建立了你自己的訂單聊天機器人

205
00:12:11,240 --> 00:12:13,240
你可以自由地定制它

206
00:12:13,240 --> 00:12:16,240
試玩一下系統信息

207
00:12:16,240 --> 00:12:19,240
並改變聊天機器人的行為

208
00:12:19,240 --> 00:12:46,240
讓它作為具有不同知識的不同角色行事

