1
00:00:05,000 --> 00:00:09,840
大語言模型非常善於將其輸入轉換為不同的格式

2
00:00:09,840 --> 00:00:14,100
例如，輸入一種語言的文本並將其轉換或

3
00:00:14,100 --> 00:00:19,300
把它翻譯成不同的語言，或者幫助進行拼寫和語法的修正

4
00:00:19,300 --> 00:00:21,780
因此，將一段可能不符合標準的語法文本作為輸入

5
00:00:21,780 --> 00:00:25,020
並讓它幫助你糾正拼寫和語法

6
00:00:25,020 --> 00:00:28,380
或甚至轉換格式，如

7
00:00:28,380 --> 00:00:31,100
輸入HTML和輸出JSON

8
00:00:31,100 --> 00:00:35,140
所以，我以前寫的一些應用程序有點痛苦，用的是

9
00:00:35,140 --> 00:00:38,100
一堆正則表達式的應用

10
00:00:38,100 --> 00:00:41,800
現在用一個大語言模型和一些提示語就可以更簡單地實現

11
00:00:41,800 --> 00:00:46,500
是的，我現在用ChatGPT來校對我寫的幾乎所有東西

12
00:00:46,500 --> 00:00:50,340
所以我很高興現在向你展示Notebook中的一些更多的例子

13
00:00:50,340 --> 00:00:55,900
所以，首先，我們將導入openai，同時

14
00:00:55,900 --> 00:01:01,180
使用我們在整個影片中一直使用的get_completion輔助函數

15
00:01:01,180 --> 00:01:04,540
我們要做的第一件事是一個翻譯任務

16
00:01:04,540 --> 00:01:09,940
因此，大語言模型是在許多來源的大量文本上訓練出來的

17
00:01:09,940 --> 00:01:11,100
其中有很多是互聯網

18
00:01:11,100 --> 00:01:13,600
這當然是用許多不同的語言

19
00:01:13,600 --> 00:01:17,580
因此，這使模型具有翻譯能力

20
00:01:17,580 --> 00:01:22,380
這些模型知道數百種語言的不同程度的熟練程度

21
00:01:22,380 --> 00:01:26,540
所以我們將通過一些例子來說明如何使用這種能力

22
00:01:26,540 --> 00:01:29,580
所以，讓我們從簡單的東西開始

23
00:01:29,580 --> 00:01:31,540
所以在這第一個例子中

24
00:01:31,540 --> 00:01:35,700
提示是將以下英文文本翻譯成西班牙語

25
00:01:35,700 --> 00:01:38,260
你好，我想訂購一台攪拌機

26
00:01:38,260 --> 00:01:40,620
響應是：Hola

27
00:01:40,620 --> 00:01:45,580
me gustaría ordenar una licuadora.

28
00:01:45,580 --> 00:01:48,660
我對所有講西班牙語的人感到非常抱歉

29
00:01:48,660 --> 00:01:53,620
我從來沒有學過西班牙語，很不幸，你肯定能看出來

30
00:01:54,500 --> 00:01:57,220
讓我們嘗試另一個例子

31
00:01:57,220 --> 00:02:00,460
所以在這個例子中

32
00:02:00,460 --> 00:02:04,220
提示是，告訴我這是什麼語言

33
00:02:04,220 --> 00:02:06,980
那麼這是用法語說的

34
00:02:06,980 --> 00:02:09,700
combien coûte le lampadaire?

35
00:02:09,700 --> 00:02:12,020
所以我們來運行這個

36
00:02:12,820 --> 00:02:17,340
該模型已經識別出這是法語

37
00:02:17,340 --> 00:02:22,220
該模型還可以一次做多個翻譯

38
00:02:22,220 --> 00:02:23,900
所以在這個例子中

39
00:02:23,900 --> 00:02:27,740
讓我們說把下面的文字翻譯成法語和西班牙語

40
00:02:27,740 --> 00:02:29,940
你知道嗎，讓我們再加一個

41
00:02:29,940 --> 00:02:34,060
英國海盜

42
00:02:34,380 --> 00:02:38,500
這段文字是，我想訂購一個籃球

43
00:02:40,460 --> 00:02:43,180
所以這裡我們有法語

44
00:02:43,180 --> 00:02:47,300
西班牙文，和英國海盜

45
00:02:47,300 --> 00:02:49,300
所以在某些語言中

46
00:02:49,300 --> 00:02:51,340
翻譯可以改變，取決於

47
00:02:51,340 --> 00:02:53,660
說話人與聽話人的關係

48
00:02:53,660 --> 00:02:56,860
你也可以向語言模型解釋這一點

49
00:02:56,860 --> 00:03:00,380
這樣它就能進行相應的翻譯

50
00:03:00,380 --> 00:03:02,540
所以在這個例子中

51
00:03:02,540 --> 00:03:07,220
我們說把下面的文字以正式和非正式的形式翻譯成西班牙語

52
00:03:07,220 --> 00:03:09,060
你想訂購一個枕頭嗎？

53
00:03:09,060 --> 00:03:11,260
還注意到，我們在這裡使用了

54
00:03:11,260 --> 00:03:14,300
不同的分隔符，而不是這些雙引號

55
00:03:14,300 --> 00:03:18,260
其實這並不重要，只要它是一個清晰的分隔

56
00:03:18,260 --> 00:03:22,700
所以這裡我們有正式和非正式

57
00:03:22,700 --> 00:03:25,580
因此，正式的是當你和某人說話時，他是

58
00:03:25,580 --> 00:03:28,980
也許比你高級的人，或者你是在一個專業的情況下

59
00:03:28,980 --> 00:03:30,340
這時你要使用正式語氣

60
00:03:30,340 --> 00:03:34,540
然後非正式的是當你和一群朋友說話時

61
00:03:34,540 --> 00:03:36,300
我實際上不會說西班牙語

62
00:03:36,300 --> 00:03:39,500
但我父親會，他說這是正確的

63
00:03:39,500 --> 00:03:42,020
因此，對於

64
00:03:42,020 --> 00:03:47,900
我們要假裝自己是一家跨國電子商務公司的負責人

65
00:03:47,900 --> 00:03:51,780
用戶的信息將使用所有不同的語言

66
00:03:51,780 --> 00:03:57,340
因此，用戶將用各種不同的語言告訴我們關於IT的問題

67
00:03:57,340 --> 00:04:00,300
所以我們需要一個通用的翻譯器

68
00:04:00,300 --> 00:04:06,980
因此，首先，我們將粘貼一個各種不同語言的用戶信息的列表

69
00:04:06,980 --> 00:04:15,660
現在，我們將循環瀏覽這些用戶信息中的每一條

70
00:04:15,660 --> 00:04:19,900
因此，對於用戶信息中的問題

71
00:04:19,980 --> 00:04:25,220
然後我將復制稍長的代碼塊

72
00:04:25,220 --> 00:04:28,740
所以我們要做的第一件事是要求模型

73
00:04:28,740 --> 00:04:32,420
告訴我們這個問題是什麼語言的

74
00:04:32,420 --> 00:04:34,260
所以這裡是提示

75
00:04:34,260 --> 00:04:40,380
然後，我們將打印出原始信息的語言和問題

76
00:04:40,380 --> 00:04:45,100
然後我們將要求模型將其翻譯成英語和韓語

77
00:04:45,100 --> 00:04:51,860
所以讓我們運行這個。所以，原始信息是法語

78
00:04:55,740 --> 00:04:58,300
所以我們有各種語言

79
00:04:58,300 --> 00:05:02,940
然後模型將它們翻譯成英語和韓語

80
00:05:02,940 --> 00:05:06,180
你可以看到這裡，所以模型說

81
00:05:06,180 --> 00:05:07,700
這是法語

82
00:05:07,700 --> 00:05:13,380
所以這是因為這個提示的反應將是，這是法語

83
00:05:13,380 --> 00:05:16,180
你可以嘗試將這個提示編輯成這樣的內容

84
00:05:16,180 --> 00:05:17,540
告訴我這是什麼語言

85
00:05:17,540 --> 00:05:22,220
只用一個詞來回答或不用句子

86
00:05:22,220 --> 00:05:25,340
如果你希望這只是一個詞的話

87
00:05:25,340 --> 00:05:28,580
或者你可以要求它以JSON格式或類似的東西

88
00:05:28,580 --> 00:05:33,420
這可能會鼓勵它不要使用整個句子

89
00:05:33,420 --> 00:05:38,620
因此，令人驚訝的是，你剛剛建立了一個通用翻譯器

90
00:05:38,620 --> 00:05:45,180
也可以隨時暫停影片，在這裡添加任何你想嘗試的其他語言

91
00:05:45,180 --> 00:05:47,340
也許是你自己說的語言

92
00:05:47,340 --> 00:05:49,860
看看這個模型是怎麼做的

93
00:05:49,860 --> 00:05:55,060
因此，我們接下來要深入研究的是語氣轉換

94
00:05:55,060 --> 00:05:58,300
寫作可以根據目標受眾而有所不同

95
00:05:58,300 --> 00:06:03,140
我給同事或教授寫電子郵件的方式

96
00:06:03,140 --> 00:06:06,820
顯然會與我給我弟弟發短信的方式完全不同

97
00:06:06,820 --> 00:06:10,980
所以ChatGPT實際上也可以幫助產生不同的語氣

98
00:06:10,980 --> 00:06:14,260
因此，讓我們看一些例子

99
00:06:14,260 --> 00:06:16,620
在這第一個例子中

100
00:06:16,620 --> 00:06:20,780
提示是，將以下內容從俚語翻譯成商務信函

101
00:06:20,780 --> 00:06:22,100
老兄，這是喬

102
00:06:22,100 --> 00:06:25,180
檢查一下這盞落地燈的規格

103
00:06:25,180 --> 00:06:29,460
因此，讓我們來執行這個

104
00:06:30,460 --> 00:06:35,500
正如你所看到的，我們有一封更正式的商業信函

105
00:06:35,500 --> 00:06:39,660
有一個關於落地燈規格的建議

106
00:06:39,660 --> 00:06:44,580
我們要做的下一件事是在不同的格式之間進行轉換

107
00:06:44,580 --> 00:06:50,260
ChatGPT非常善於在不同的格式之間進行轉換，如JSON到HTML

108
00:06:50,260 --> 00:06:54,300
XML，各種各樣的東西，markdown

109
00:06:54,300 --> 00:06:58,660
所以在提示中，我們將描述輸入和輸出的格式

110
00:06:58,660 --> 00:07:01,900
所以這裡有一個例子

111
00:07:01,900 --> 00:07:05,100
所以我們有這樣一個JSON

112
00:07:05,100 --> 00:07:10,340
它包含一個餐廳員工的名單，包括他們的名字和電子郵件

113
00:07:10,340 --> 00:07:12,580
然後在提示中

114
00:07:12,580 --> 00:07:17,940
我們將要求模型將其從JSON翻譯成HTML

115
00:07:17,940 --> 00:07:22,100
所以提示是，把下面的Python字典從JSON翻譯成

116
00:07:22,100 --> 00:07:26,260
HTML，包括列頭和標題

117
00:07:28,220 --> 00:07:35,380
然後我們將從模型中得到響應並打印出來

118
00:07:35,380 --> 00:07:44,140
所以這裡我們有一些HTML顯示所有的僱員姓名和電子郵件

119
00:07:44,140 --> 00:07:49,220
那麼現在讓我們來看看我們是否可以作為

120
00:07:49,220 --> 00:07:54,460
所以我們要使用這個Python庫中的這個顯示函數

121
00:07:54,460 --> 00:07:58,860
顯示 HTML 響應

122
00:08:00,100 --> 00:08:06,340
在這裡你可以看到這是一個正確格式化的HTML表格

123
00:08:06,420 --> 00:08:13,100
我們要做的下一個轉換任務是拼寫檢查和語法檢查

124
00:08:13,100 --> 00:08:16,740
這是ChatGPT的一個非常流行的用途

125
00:08:16,740 --> 00:08:18,780
我強烈建議這樣做

126
00:08:18,780 --> 00:08:20,060
我一直在做這個

127
00:08:20,060 --> 00:08:23,380
當你用非母語工作時，它尤其有用

128
00:08:23,380 --> 00:08:28,140
因此，這裡有一些常見的語法和拼寫問題的例子

129
00:08:28,140 --> 00:08:31,580
以及語言模型如何幫助解決這些問題

130
00:08:31,580 --> 00:08:40,500
所以我將粘貼一個有一些語法或拼寫錯誤的句子列表

131
00:08:40,500 --> 00:08:46,420
然後，我們將循環瀏覽每一個句子

132
00:08:49,140 --> 00:08:50,740
然後

133
00:08:51,620 --> 00:08:56,620
讓模型進行校對

134
00:08:56,620 --> 00:09:02,500
校對並進行修正。然後我們將使用一些分隔符

135
00:09:11,500 --> 00:09:15,500
然後我們將獲取響應並將其打印出來，就像往常一樣

136
00:09:35,260 --> 00:09:41,420
就這樣，這個模型能夠糾正所有這些語法錯誤

137
00:09:41,420 --> 00:09:44,180
我們可以使用我們之前討論過的一些技術

138
00:09:44,180 --> 00:09:50,100
因此，為了改進提示，我們可以說校對和糾正以下文字

139
00:09:50,100 --> 00:09:54,580
並重寫

140
00:09:54,580 --> 00:09:55,580
哦

141
00:09:55,580 --> 00:10:05,580
並重寫整個

142
00:10:05,580 --> 00:10:10,580
並重寫

143
00:10:10,580 --> 00:10:16,580
改正後的版本

144
00:10:16,580 --> 00:10:25,700
如果你沒有發現任何錯誤，就說沒有發現錯誤

145
00:10:25,700 --> 00:10:29,700
讓我們來試試這個

146
00:10:29,700 --> 00:10:37,700
因此，這種方式我們能夠，哦，他們在這裡仍然使用引號

147
00:10:37,700 --> 00:10:42,940
但你可以想像，你能夠找到一種方法，用一點點的

148
00:10:42,940 --> 00:10:45,780
迭代提示開發

149
00:10:45,780 --> 00:10:49,260
找到一種更可靠的提示方式，每一次都能正常工作

150
00:10:49,260 --> 00:10:51,700
因此，現在我們將實現另一個例子

151
00:10:51,700 --> 00:10:56,040
在你把你的文本發佈到公共論壇之前，檢查它總是有用的

152
00:10:56,040 --> 00:10:59,100
因此，我們將通過一個檢查評論的例子

153
00:10:59,100 --> 00:11:01,980
這裡有一個關於毛絨熊貓的評論

154
00:11:01,980 --> 00:11:06,740
因此，我們將要求模型校對和糾正評論

155
00:11:06,740 --> 00:11:11,100
很好。所以我們有了這個更正的版本

156
00:11:11,100 --> 00:11:14,860
我們可以做的一件很酷的事情是找到

157
00:11:14,860 --> 00:11:19,180
我們的原始評論和模型的輸出之間的差異

158
00:11:19,180 --> 00:11:24,380
所以我們要基於這個Redlines Python包來做這個

159
00:11:24,380 --> 00:11:26,800
我們將得到以下的差異

160
00:11:26,800 --> 00:11:32,460
我們評論的原文和模型的輸出之間的差異

161
00:11:32,460 --> 00:11:36,740
然後顯示這個

162
00:11:36,740 --> 00:11:40,340
所以在這裡你可以看到原始評論和模型輸出之間的差異

163
00:11:40,340 --> 00:11:44,940
和模型輸出之間的差異，以及那些已經被糾正的東西

164
00:11:44,940 --> 00:11:49,380
因此，我們使用的提示是校對和糾正這個評論

165
00:11:49,380 --> 00:11:52,820
但你也可以做一些更戲劇性的改變

166
00:11:52,820 --> 00:11:55,700
語氣的變化，以及諸如此類的事情

167
00:11:55,700 --> 00:12:00,340
因此，讓我們再試一試

168
00:12:00,340 --> 00:12:04,500
所以在這個提示中，我們將要求模特校對和糾正

169
00:12:04,500 --> 00:12:08,700
同樣的評論，但也要使其更有說服力，並確保其

170
00:12:08,700 --> 00:12:11,860
遵循APA風格，並針對高級讀者

171
00:12:11,860 --> 00:12:14,860
我們還將要求以Markdown格式輸出結果

172
00:12:14,860 --> 00:12:18,780
因此，我們在這裡使用原始審查的相同文本

173
00:12:18,780 --> 00:12:23,260
因此，讓我們來執行這個

174
00:12:23,260 --> 00:12:30,380
在這裡，我們有一個擴展的APA風格的毛絨熊貓的評論

175
00:12:30,380 --> 00:12:32,300
因此，這是它的轉換影片

176
00:12:32,300 --> 00:12:35,700
接下來，我們將使用擴寫功能，採取較短的提示

177
00:12:35,700 --> 00:12:54,180
並從語言模型中產生一個更長、更自由的反應

